Комаров Максим
Метелев Никита
Gr1. В стране N городов, некоторые из которых соединены между собой двусторонними дорогами. Чтобы проехать по одной дороге, требуется один бак бензина. В каждом городе бак бензина имеет разную стоимость. Вам требуется добраться из первого города в N-й, потратив как можно меньшее количество денег.
Вершины - города, рёбра - дороги между нмим
Алгоритм:
Начальная и конченая для алг. Дейкстры даны по условию
Поэтому начальной вершине toOpen присвоим стартовую вершину
Начать вечный цикл:
	Если стартовая вершина = null прекратить
	Если стартовая вершина равна конечной закончить цикл
	Далее в цикле проходимся по всем рёбрам инцидентным нашей текущей вершине
		Цена смещения становится равна значению, которое храниться в нашей вершине + накопленному весу
		Следующая вершина - вершина инциденая нашей
		Если в нашем текущем пути нет следующий вершины и значение хранимое в следующей вершине больше текущей
			Мы сохраняем в путь предыдущую(текущую) вершине и новую + обновляем полную цену
	Убираем посещённую точку из не посещённых

Дальше результат - это перевернутый сохранённый путь.

Gr2. В столице внезапно решили провести олимпиаду и отправили гонцов во все города страны, по одному в каждый город. Через какое минимальное время все города смогут узнать о проведении олимпиады? Дана дорожная сеть. Для каждой дуги известна максимальная допустимая скорость передвижения и длина дороги.

У нас для каждой дуги - ребра дана её длинна и максимальная скорость передвижения по ней,
Чтобы найти минимальное время доставки сообщения найдём минимальное остовное дерево по алг. Краскала
Где данные дуги - это рёбра, цена на этих дугах - это время пути по дороге (длина дороги/макс скорость)

Принимая на вход такой граф алг. Краскала вернёт нам дерево с мин значением рёбер - мин значением всех путей передвижения

Посчитав цену всех рёбер этого дерева получим мин. время, за которое сообщения дойдёт во все города

Gr3. План электрификации Есть N городов, в K из них (известно, в каких) построили электростанции. Требуется электрифицировать все остальные города, построив некоторое количество линий электропередач. Чтобы в городе появилось электричество, должен быть путь от него до некоторого города с электростанцией по линиям. Для каждой пары городов известна стоимость постройки линии между ними.
*ЭС - электростанция

У нас есть список всех городов и список городов с электростанциями

Создадим список всех городов без электростанций

Проходимся по всем рёбрам, которые заранее отсортированы по возрастанию цены постройки
	если нет цикла в создаваемом дереве и это ребро не соединяет город без ЭС и город с ЭС
		тогда добавляем в дерево это ребро
		Убираем его из списка, в котором находятся все неподключенные к ЭС города
Возвращаем итоговое дерево соединений городов

//ещё один возможный вариант решения 

есть список городов без ЭС и с ЭС
Создаем новый граф городов без эс добавляем туда город с электростанцией
	Проходимся алг. Краскала по этому графуначиная с электростанции

Так получаем минимальные остовные деревья в которой корнем является город с ЭС

Далее проходимся по этим деревьям и выюираем в конечный список неповторяющиеся соединения из этих деревьев
Получаем дерево соединений всех городов с ЭС и без по мин. цене

Gr4. Задача о рюкзаке. Есть N золотых слитков, i-й имеет массу W i килограмм и стоимость Li рублей. Нужно унести в рюкзаке, выдерживающем W килограмм, множество слитков максимальной суммарной стоимости. Cлитки разрешается произвольным образом пилить на части (считаем, что стоимости частей слитка пропорциональны массам этих частей).

Мы сортируем слитки по соотношению цена за кг(цена/массу) в порядке убывания
Проходимся по всем слиткам пока вместимость в рюкзаке <= макс вместимости
 Если слиток вмещается полностью 
	Добавляем в список добычи слиток
	вес рюкзака += вес слитка
	ценность рюкзаке += цена слитка
Иначе делим слиток так, чтобы он поместился в рюкзак
	Добавляем в список добычи часть слитка
	вес рюкзака += вес слитка
	ценность в рюкзаке += цена слитка

Возвращаем список добычи или суммарную её стоимость, немного непонятно из условия, что именно возвращаем

Gr5. Студент участвует в соревновании по программированию. За каждую задачу участники получают столько баллов штрафа времени, сколько прошло минут от начала соревнования до момента сдачи задачи. Решение i-ой задачи занимает t i минут. В каком порядке следует решать задачи, чтобы получить минимальный штраф времени?

Нужно отсортировать все задачи по времени их решения, в порядке возрастания
Вернуть отсортированный список задач
Таким образом участник решая задачи быстро будет получать мин штраф по времени

Gr6. Дан ориентированный граф. Найти Эйлеров цикл (проходящий через все ребра).


эйлеров граф = граф, где есть Эйлеров цикл

 Эйлеров цикл в орграфе есть только тогда, когда у каждой вершины исходящая и входящая степени равны и орграф связный 
	ИЛИ если орграф сильно связан

Поэтому нужно проверить это условие для нашего орграфа, если он не эйлеров граф, то, дать знать, что граф не подходит

Когда мы поняли, что в нашем графе есть эйлеров цикл 
Используем алг. Флёри для нахождения эйлерова цикла в графе:
	Берём некоторую вершину проходим по её ребру, каждый раз вычеркивая пройденное ребро, но не проходим по ребру если его удаление - приведёт к разбиению цельного графа на компоненты связности

	
Gr7. Есть набор костяшек домино. Можно ли их все выложить в одну линию, стыкуя по правилам домино?

 Для построения домино в одну линию нужно, 
1) чтобы конец текущей доминошки был равен началу/концу следующей
2) чтобы такому условию удовлетворяли все домино
Если такому условию удовлетворяют не все домино, то выложить их в одну линию нельзя
